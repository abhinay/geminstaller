* add more tests for dependencies to geminstaller_spec
* write docs for fix_dependencies and prefer_binary_platform options
* document rules for automatic dependency selection - always pick binary platform-specific gem first, provide option to override
* Use rubygems executables from test_gem_home.  In order to do this, we must run test_gem_home and ensure it is on the load path BEFORE the system installation of rubygems ever gets initialized.  We will also have to manually include all geminstaller test dependency gems in test_gem_home or on the path.  Tried this once and failed, patch on linux box...
* make smoketest test fix_dependencies
* dependency gems should print installing message to info as well as parent gem
* make all possible attempts install dependent gems.  If match fails, and parent gem was /win/, try to match that.  Maybe print warnings if the platform does not match one of the valid ones in RubyGems?  Maybe a guess_platform flag, true by default?
* clean up spec_utils - remove duplication of class and instance methods
* spec_utils global teardown method which uninstalls all gems
* can't run binary out of source dir unless running it via ruby
* Return meaningful message instructing to use the --sudo option if Errno::EACCES is caught on a sudo-able platform
* check gems: mongrel, mongrel_cluster, hpricot, rmagick
* diff-lcs gem was not installed for geminstaller project (linux)
* --config does not work on windows with c:\path\to\yml
* verify that >= version spec works with a specific platform, if that platform is not available for the highest version
* Check for write access, and exit with warning to use sudo if there is no write access.
* by default, print when gems are installed
* print line for yaml errors
* Change windows orphaned grandchild error message - link to post http://rubyforge.org/tracker/?func=detail&atid=412&aid=8957&group_id=85 - say there's no way to fix other than use ruby_services.
* non-specific versions in config yml (such as > 0.1.2) must be specified in quotes (such as '> 0.1.2') or else they are not correctly parsed by yaml (just returns '0.1.2' instead of '> 0.1.2').  Should give some warning instead of just failing
* store rubygems dist as a tar, and untar it on demand
* Add spec file name to all contexts (or see if rspec can do it automatically)
* Make GemInstaller.run take a parameter to not fail if there is any error
* Embedded gem_server process doesn't get killed on windows during tests
* Embedded gem_server ports aren't handled correctly on linux during tests - port conflict on startup, open ports die off slowly after tests finish
* Rails integration doesn't work under mongrel when invoked via executable (e.g, actionmailer gem not recognized after install, only after mongrel restart).  Does't occur under webrick, or if geminstaller is invoked programatically via class.
* Do a port check before starting embedded gem server, give option to kill process or at least exit with a descriptive warning.
* rake test fails on linux (problems starting embedded gem server)
* update docs with details on how to handle unmet dependencies when -y is not specified
* write basic rdoc instructions
* publish site
* upload gem 
* Define procedure to invoke programatically via rails and non-rails
* Document simple example (command line, rails, non-rails) in README.txt
* create basic website
* Clean up spec_helper, find out simplest way to invoke rspec via test_unit, and still provide proper return codes/output
* Application should not do any remote operations (or anything, really) if the version and platform are non-ambiguous and already installed.
* remove cruft from test output - intercept output streams from gem_server and rubygems setup
* enhance DependencyInjector - allow items to be substituted prior to initialization - then geminstaller_spec could simply set a mock output_proxy on the registry instead of explicitly setting it every place it is used.
* ensure --debug install option works as expected
* quiet/info/verbose option enhancements
  * move checks for quiet/info/verbose into output_proxy
  * Use a logger, hook it into --info/verbose option
  * Review and clarify meanings of --info, --verbose
  * add more output for --info option.  Should also be able to check info flag from classes other than Application
  * add --trace option? logging vs. stacktraces vs. ???
* boot.rb parsed twice under webrick?
* fix all Zentest warnings
* Rename RubyGem class to RubyGemAction, add install vs. uninstall actions in config (install is default)
* Automate process for creating a stubgem
* Give nice error message if gem server is unavailable (check socket)
* Make tests run under RadRails debugger
* Rename GemInstaller::Runner to GemInstaller::GemInstaller
* handle unsupported gem install options - for example, -t gives uninitialized constant Gem::Validator
* update info in stubgem (not sow defaults)
* Make SourceIndex.search use alternate method that does exact regex match, to avoid passing the exact regex ourselves.
* Fix errors when using relative or ~/ dir in --config path
* make verbose option specify --backtrace on all gem commands
* Add support, syntax, and options for uninstalling gems - completely, or down to highest specified version.
* add feature to automatically warn if there is a more recent version of the gem available and check_for_upgrade == false.  Use "gem outdated" command
* auto-generate geminstaller.yml files (possibly by parsing source, or based on all gems installed locally)
