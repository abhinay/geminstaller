* add -v/--geminstaller-verbosity -V/-rubygems-verbosity flags.
* -v/--geminstaller-verbosity: none, install, info, commandecho, debug, all
* prepend [RubyGems :<stream>] to all rubygems output
* Installing Gem message not printed unless info message passed (uninstall RedCloth, and run geminstaller for itself)
* modify rails example to try non-sudo first, then sudo
* check gems: mongrel, mongrel_cluster, hpricot, rmagick
* diff-lcs gem was not installed for geminstaller project (linux)
* update docs for verbosity
* update docs for autogem
* write docs for fix_dependencies and prefer_binary_platform options
* update docs with details on how to handle unmet dependencies when -y is not specified
* document rules for automatic dependency selection - always pick binary platform-specific gem first, provide option to override
* document option to run via capistrano
* create basic website via rubygen
* publish site
* upload gem 
- 0.2.0 release

* clean up regexps - no leading or trailing .*
* autogem should follow dependency chains
* Return meaningful message instructing to use the --sudo option if Errno::EACCES is caught on a sudo-able platform - should throw GemInstaller::AccessException, which can be caught
* Rails integration doesn't work under mongrel when invoked via executable (e.g, actionmailer gem not recognized after install, only after mongrel restart).  Does't occur under webrick, or if geminstaller is invoked programatically via class.
* rails example doesn't print any warning if geminstaller is not installed
* "Installing gem" messages are duplicated if info message is specified, one from rubygems, one from geminstaller.  See todo in install_processor.rb
* boot.rb parsed twice under webrick?
- 0.3.0 release

* tests failed when "partially" connected to network? (wireless at office)
* tests fail with timeouts intermittently on windows
* add more tests for dependencies to geminstaller_spec
* reconcile methods for testing error messages - manually vs proc_should_raise_with_message.  Probably should patch rspec.
* remove test_gem_home.reset from geminstaller_spec.rb WITHOUT breaking the test suite.
* tests fail on windows - seems to be related to test_gem_home running twice.  smoketest still passes.
* Use rubygems executables from test_gem_home.  In order to do this, we must run test_gem_home and ensure it is on the load path BEFORE the system installation of rubygems ever gets initialized.  We will also have to manually include all geminstaller test dependency gems in test_gem_home or on the path.  Tried this once and failed, patch on linux box...
* clean up spec_utils - remove duplication of class and instance methods
* spec_utils global teardown method which uninstalls all gems
* can't run binary out of source dir unless running it via ruby
* verify that >= version spec works with a specific platform, if that platform is not available for the highest version
* Check for write access, and exit with warning to use sudo if there is no write access.
* non-specific versions in config yml (such as > 0.1.2) must be specified in quotes (such as '> 0.1.2') or else they are not correctly parsed by yaml (just returns '0.1.2' instead of '> 0.1.2').  Should give some warning instead of just failing
* store rubygems dist as a tar, and untar it on demand
* Add spec file name to all contexts (or see if rspec can do it automatically)
* Make GemInstaller.run take a parameter to not fail if there is any error
* Embedded gem_server process doesn't get killed on windows during tests - need to use ruby services, see comment in embedded_gem_server.rb
* Embedded gem_server ports aren't handled correctly on linux during tests - port conflict on startup, open ports die off slowly after tests finish
* Do a port check before starting embedded gem server, give option to kill process or at least exit with a descriptive warning.
* Clean up spec_helper, find out simplest way to invoke rspec via test_unit, and still provide proper return codes/output
* remove cruft from test output - intercept output streams from gem_server and rubygems setup
* enhance DependencyInjector - allow items to be substituted prior to initialization - then geminstaller_spec could simply set a mock output_proxy on the registry instead of explicitly setting it every place it is used.
* ensure --debug install option works as expected
* fix all Zentest warnings
* Rename RubyGem class to RubyGemAction, add install vs. uninstall actions in config (install is default)
* Automate process for creating a stubgem
* Give nice error message if gem server is unavailable (check socket)
* Make tests run under RadRails debugger
* handle unsupported gem install options - for example, -t gives uninitialized constant Gem::Validator
* update info in stubgem (not sow defaults)
* Fix errors when using relative or ~/ dir in --config path
* make verbose option specify --backtrace on all gem commands
* Add support, syntax, and options for uninstalling gems - completely, or down to highest specified version.
* add feature to automatically warn if there is a more recent version of the gem available and check_for_upgrade == false.  Use "gem outdated" command
* auto-generate geminstaller.yml files (possibly by parsing source, or based on all gems installed locally)
