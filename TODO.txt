* Make SourceIndex.search use exact regex match, not wildcard.
* Look into using RubyGems built in dependency support rather than home-grown solution
* Handle gems with multiplatform menu, like mongrel or fjson
* Make GemInstaller.run take a parameter to not fail if there is any error
* Give nice error message if gem server is unavailable (check socket)
* Rename GemInstaller::Runner to GemInstaller::GemInstaller
* Define procedure to invoke programatically via rails and non-rails
* Document simple example (command line, rails, non-rails) in README.txt
* handle unsupported gem install options - for example, -t (test) gives uninitialized constant Gem::Validator
* Add support for multiple config files (last ones win)
* update info in stubgem (not sow defaults)
* Run embedded gem_server for tests at nonstandard (not 8808) port
* Fix errors when using relative or ~/ dir in --config path
* add option to specify --backtrace on all gem commands
* Show warning if there is a more recent gem available (and the default?) in the repository
* -v option should show full stacktrace on errors
* add api support (simple to invoke from ruby)
* take --trace parameter to show full stack trace
* decide how to deal with sudo problem.  probably initially just tell people to add user and gem command to sudoers file with no password
* write basic rdoc instructions
* publish site
* upload gem 
* create basic website
* add feature to automatically warn if there is a more recent version of the gem available.
* Have tests install to temp dir instead of real gem repo (use FileUtils.rm_rf, see rubygems doc_manager for example)